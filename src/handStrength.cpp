#include <iostream>
#include <unordered_map>
#include <string>
#include <vector>

using namespace std;

double eval2Card(const std::string& cards){
    
   unordered_map<std::string, int> handMap( {
       {"12,12,1",1},{"11,11,1",2},{"10,10,1",3},{"9,9,1",4},
       {"12,11,0",5},{"12,10,0",6},{"8,8,1",7},{"12,11,1",8},        
       {"12,9,0",9},{"11,10,0",10},{"7,7,1",11},{"12,8,0",12},
       {"12,10,1",13},{"11,9,0",14},{"6,6,1",15},{"10,9,0",16},
       {"11,8,0",17},{"12,7,0",18},{"12,9,1",19},{"10,8,0",20},        
       {"11,10,1",21},{"5,5,1",22},{"9,8,0",23},{"12,6,0",24},
       {"11,7,0",25},{"12,8,1",26},{"12,3,0",27},{"12,5,0",28},
       {"11,9,1",29},{"4,4,1",30},{"8,7,0",31},{"12,2,0",32},        
       {"10,7,0",33},{"9,7,0",34},{"10,9,1",35},{"12,4,0",36},
       {"3,3,1",37},{"12,1,0",38},{"11,6,0",39},{"11,8,1",40},
       {"7,6,0",41},{"8,6,0",42},{"11,5,0",43},{"12,0,0",44},        
       {"6,5,0",45},{"10,8,1",46},{"10,6,0",47},{"2,2,1",48},
       {"12,7,1",49},{"9,6,0",50},{"5,4,0",51},{"9,8,1",52},
       {"7,5,0",53},{"11,4,0",54},{"11,3,0",55},{"11,2,0",56},        
       {"8,5,0",57},{"10,5,0",58},{"11,7,1",59},{"4,3,0",60},
       {"8,7,1",61},{"6,4,0",62},{"12,6,1",63},{"9,5,0",64},
       {"1,1,1",65},{"3,2,0",66},{"10,4,0",67},{"11,1,0",68},        
       {"11,7",69},{"5,3,0",70},{"0,0,1",71},{"9,7,1",72},
       {"4,2,0",73},{"10,3,0",74},{"11,0,0",75},{"7,4,0",76},
       {"10,1,0",77},{"9,6,1",78},{"7,6,1",79},{"8,6,1",80}, 
       {"7,5,1",81},{"12,5,1",82},{"8,5,1",83},{"10,2,0",84}, 
       {"10,6,1",85},{"9,3,0",86},{"8,4,1",87},{",5,3,1",88}, 
       {"9,2,0",89},{"5,2,0",90},{"11,6,1",91},{"6,4,1",92}, 
       {"3,1,0",93},{"11,5,1",94},{"4,1,0",95},{"9,4,0",96}, 
       {"6,3,1",97},{"8,4,0",98},{"5,4,1",99},{"12,4,1",100}, 
       {"8,0,1",101},{"7,3,0",102},{"6,2,1",103},{"4,0,1",104}, 
       {"8,3,0",105},{"7,3,1",106},{"12,3,1",107},{"10,5,1",108}, 
       {"8,3,1",109},{"6,5,1",110},{"6,1,1",111},{"4,3,1",112}, 
       {"10,0,0",113},{"7,2,1",114},{"5,2,1",115},{"3,2,1",116}, 
       {"12,2,1",117},{"8,2,1",118},{"6,0,1",119},{"4,2,1",120}, 
       {"2,0,1",121},{"9,5,1",122},{"7,1,1",123},{"6,3,0",124}, 
       {"5,1,1",125},{"3,1,1",126},{"8,1,1",127},{"4,1,1",128}, 
       {"11,4,1",129},{"9,4,1",130},{"7,4,1",131},{"7,0,1",132}, 
       {"5,0,1",133},{"3,0,1",134},{"10,2,1",135},{"11,3,1",136}, 
       {"9,3,1",137},{"2,1,0",138},{"10,1,1",139},{"2,1,1",140}, 
       {"11,2,1",141},{"9,2,1",142},{"8,2,0",143},{"10,4,1",144}, 
       {"10,0,1",145},{"9,1,0",146},{"9,1,1",147},{"8,1,0",148}, 
       {"12,1,1",149},{"10,3,1",150},{"9,0,1",151},{"6,2,0",152}, 
       {"6,0,0",153},{"2,0,0",154},{"7,1,0",155},{"5,1,0",156}, 
       {"11,1,1",157},{"9,0,0",158},{"7,0,0",159},{"3,0,0",160}, 
       {"11,0,1",161},{"8,0,0",162},{"4,0,0",163},{"1,0,1",164}, 
       {"12,0,1",165},{"6,1,0",166},{"7,2,0",167},{"5,0,0",168},
       {"1,0,0",169}       
   });
   unordered_map<std::string, int>::iterator it;
   it = handMap.find(cards);   
   
  if ( it == handMap.end() )
    std::cout << "not found";
  else
    return it->second;
}
string convertHandToString(vector<int>& hand){
    string str;
    if(hand.at(0)/4 >= hand.at(1)/4){
        str += to_string(hand.at(0)/4);
        str += ",";
        str += to_string(hand.at(1)/4);
        str += ",";
    }
    else{
        str += to_string(hand.at(1)/4);
        str += ",";
        str += to_string(hand.at(0)/4);
        str += ","; 
    }        
    if(hand.at(1)%4 == hand.at(0)%4){
       str += "0"; 
    }
    else{
      str += "1";  
    }    
    return str;
}
