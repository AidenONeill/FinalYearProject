#include <iostream>
#include <unordered_map>
#include <string>
#include <vector>

using namespace std;

double eval2Card(const std::string& cards){
	unordered_map<std::string, int> handMap({
		{"12,12,o",1},{"11,11,o",2},{"10,10,o",3},{"12,11,s",4},
		{"9,9,o",5},{"12,10,s",6},{"11,10,s",7},{"12,9,s",8},
		{"11,9,s",9},{"8,8,o",10},{"12,11,o",11},{"12,8,s",12},
		{"10,9,s",13},{"11,8,s",14},{"10,8,s",15},{"9,8,s",16},
		{"7,7,o",17},{"12,10,o",18},{"12,7,s",19},{"11,10,o",20},
		{"6,6,o",21},{"11,7,s",22},{"8,7,s",23},{"12,6,s",24},
		{"10,7,s",25},{"9,7,s",26},{"12,9,o",27},{"12,3,s",28},
		{"5,5,o",29},{"12,5,s",30},{"11,9,o",31},{"12,2,s",32},
		{"12,1,s",33},{"12,4,s",34},{"10,9,o",35},{"4,4,o",36},
		{"11,6,s",37},{"8,6,s",38},{"12,0,s",39},{"7,6,s",40},
		{"9,6,s",41},{"12,8,o",42},{"10,6,s",43},{"11,5,s",44},
		{"11,8,o",45},{"3,3,o",46},{"9,8,o",47},{"6,5,s",48},
		{"10,8,o",49},{"2,2,o",50},{"1,1,o",51},{"0,0,o",52},
		{"11,4,s",53},{"7,5,s",54},{"11,3,s",55},{"5,4,s",56},
		{"8,5,s",57},{"11,2,s",58},{"11,1,s",59},{"11,0,s",60},
		{"10,5,s",61},{"6,4,s",62},{"4,3,s",63},{"9,5,s",64},
		{"3,2,s",65},{"10,4,s",66},{"5,3,s",67},{"7,4,s",68},
		{"10,3,s",69},{"4,2,s",70},{"10,2,s",71},{"10,1,s",72},
		{"8,7,o",73},{"8,4,s",74},{"10,0,s",75},{"12,7,o",76},
		{"3,1,s",77},{"6,3,s",78},{"9,4,s",79},{"9,7,o",80},
		{"11,7,o",81},{"9,3,s",82},{"10,7,o",83},{"2,1,s",84},
		{"5,2,s",85},{"9,2,s",86},{"9,1,s",87},{"7,3,s",88},
		{"9,0,s",89},{"4,1,s",90},{"12,6,o",91},{"3,0,s",92},
		{"8,3,s",93},{"6,2,s",94},{"8,2,s",95},{"8,1,s",96},
		{"2,0,s",97},{"8,0,s",98},{"7,6,o",99},{"8,6,o",100},
		{"12,3,o",101},{"12,5,o",102},{"5,1,s",103},{"12,2,o",104},
		{"1,0,s",105},{"7,2,s",106},{"7,1,s",107},{"9,6,o",108},
		{"12,1,o",109},{"4,0,s",110},{"7,0,s",111},{"11,6,o",112},
		{"12,4,o",113},{"6,5,o",114},{"10,6,o",115},{"6,1,s",116},
		{"12,0,o",117},{"6,0,s",118},{"7,5,o",119},{"5,0,s",120},
		{"5,4,o",121},{"11,5,o",122},{"4,3,o",123},{"8,5,o",124},
		{"11,4,o",125},{"6,4,o",126},{"3,2,o",127},{"11,3,o",128},
		{"9,5,o",129},{"5,3,o",130},{"10,5,o",131},{"11,2,o",132},
		{"11,1,o",133},{"7,4,o",134},{"11,0,o",135},{"4,2,o",136},
		{"10,4,o",137},{"3,1,o",138},{"6,3,o",139},{"8,4,o",140},
		{"10,3,o",141},{"2,1,o",142},{"10,2,o",143},{"10,1,o",144},
		{"5,2,o",145},{"10,0,o",146},{"9,4,o",147},{"4,1,o",148},
		{"9,3,o",149},{"7,3,o",150},{"3,0,o",151},{"9,2,o",152},
		{"9,1,o",153},{"2,0,o",154},{"9,0,o",155},{"6,2,o",156},
		{"8,3,o",157},{"8,2,o",158},{"1,0,o",159},{"8,1,o",160},
		{"5,1,o",161},{"8,0,o",162},{"4,0,o",163},{"7,2,o",164},
		{"7,1,o",165},{"7,0,o",166},{"6,1,o",167},{"6,0,o",168},
		{"5,0,o",169},
	   });
   unordered_map<std::string, int>::iterator it;
   it = handMap.find(cards);   
   
  if ( it == handMap.end() )
    std::cout << "not found";
  else
    return it->second;
}
string convertHandToString(vector<int>& hand){
    string str;
    if(hand.at(0)/4 >= hand.at(1)/4){
        str += to_string(hand.at(0)/4);
        str += ",";
        str += to_string(hand.at(1)/4);
        str += ",";
    }
    else{
        str += to_string(hand.at(1)/4);
        str += ",";
        str += to_string(hand.at(0)/4);
        str += ","; 
    }        
    if(hand.at(1)%4 == hand.at(0)%4){
       str += "s"; 
    }
    else{
      str += "o";  
    }    
    return str;
}
